# Generated by Django 5.0.7 on 2025-01-14 14:56

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('economic_code', models.CharField(max_length=12, unique=True)),
                ('registration_number', models.CharField(max_length=20)),
                ('address', models.TextField()),
                ('phone', models.CharField(max_length=11)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('website', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_transaction_date', models.DateField(blank=True, null=True)),
                ('credit_limit', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('current_balance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('payment_terms', models.PositiveIntegerField(default=30)),
                ('industry', models.CharField(blank=True, max_length=100)),
                ('company_size', models.PositiveIntegerField(blank=True, null=True)),
                ('annual_revenue', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('customer_type', models.CharField(choices=[('government', 'Government'), ('private', 'Private Company'), ('individual', 'Individual')], default='private', max_length=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('potential', 'Potential')], default='potential', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Territory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('region', models.CharField(max_length=100)),
                ('potential_value', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('national_code', models.CharField(max_length=10, unique=True)),
                ('birth_date', models.DateField()),
                ('mobile', models.CharField(max_length=11)),
                ('home_phone', models.CharField(blank=True, max_length=11)),
                ('address', models.TextField()),
                ('position', models.CharField(max_length=100)),
                ('join_date', models.DateField()),
                ('profile_image', models.ImageField(blank=True, upload_to='employees/')),
                ('linkedin_profile', models.URLField(blank=True)),
                ('expertise_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('expert', 'Expert')], default='beginner', max_length=12)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['user__last_name', 'user__first_name'],
            },
        ),
        migrations.CreateModel(
            name='CustomerInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('interaction_type', models.CharField(choices=[('call', 'Phone Call'), ('meeting', 'Meeting'), ('email', 'Email'), ('proposal', 'Proposal Submission')], max_length=10)),
                ('notes', models.TextField()),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.customer')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.employee')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='assigned_employee',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_customers', to='web.employee'),
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='web.productcategory')),
            ],
            options={
                'verbose_name_plural': 'Product Categories',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('sku', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('stock_level', models.PositiveIntegerField(default=0)),
                ('reorder_level', models.PositiveIntegerField(default=10)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.productcategory')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('invoice_number', models.CharField(max_length=20, unique=True)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('due_date', models.DateField()),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('tax_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_method', models.CharField(max_length=50)),
                ('currency', models.CharField(default='IRR', max_length=3)),
                ('exchange_rate', models.DecimalField(decimal_places=4, default=1, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=10)),
                ('notes', models.TextField(blank=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.customer')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.employee')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='SaleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.product')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.sale')),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='territory',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.territory'),
        ),
        migrations.CreateModel(
            name='PerformanceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('sales_target', models.DecimalField(decimal_places=2, max_digits=12)),
                ('sales_achieved', models.DecimalField(decimal_places=2, max_digits=12)),
                ('new_customers', models.PositiveIntegerField()),
                ('customer_retention_rate', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.employee')),
            ],
            options={
                'unique_together': {('employee', 'period_start', 'period_end')},
            },
        ),
        migrations.CreateModel(
            name='EmployeeExpertise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expertise_level', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('years_experience', models.PositiveSmallIntegerField(default=0)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.employee')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.productcategory')),
            ],
            options={
                'unique_together': {('employee', 'category')},
            },
        ),
    ]
